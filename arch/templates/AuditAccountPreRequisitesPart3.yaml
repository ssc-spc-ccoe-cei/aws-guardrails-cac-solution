AWSTemplateFormatVersion: 2010-09-09
Description: Configures AWS Config and AWS Audit Manager for multi-account management.

Parameters:
  OrganizationName:
    Type: String
    Default: ""
    Description: The name of the organization. Used as a prefix in resource names.
  AuditAccountID:
    Type: String
    Default: ""
    Description: 12-digit AWS Account ID (e.g., '222222222222')
  RolePrefix:
    Type: String
    Default: "ASEA-"
    Description: >-
      The prefix to apply to generated role names, in ASEA this is generally ASEA- for lza this could be cdk-accel etc
  PythonRuntime:
    Type: String
    Default: "python3.12"
    Description: The python runtime to use for the compliance dashboard

Conditions:
  IsAuditAccount: !Equals
    - !Ref AWS::AccountId
    - !Ref AuditAccountID

Resources:
  CloudGuardrailsCommonLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: CloudGuardrailsCommonLayerPart3
      CompatibleRuntimes:
        - python3.12
      Content: "../../src/layer/cloud_guardrails/build/CloudGuardrailsCommonLayer/"

  #############################################
  # Part 2 - Continued
  #############################################

  ## GC07
  GC07CheckSecureNetworkTransmissionPolicyLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc07_check_secure_network_transmission_policy"
      Code: "../../src/lambda/gc07_check_secure_network_transmission_policy/build/GC07CheckSecureNetworkTransmissionPolicyLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  ## GC08
  GC08CheckTargetNetworkArchitectureLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc08_check_target_network_architecture"
      Code: "../../src/lambda/gc08_check_target_network_architecture/build/GC08CheckTargetNetworkArchitectureLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  GC08CheckCloudDeploymentGuideLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc08_check_cloud_deployment_guide"
      Code: "../../src/lambda/gc08_check_cloud_deployment_guide/build/GC08CheckCloudDeploymentGuideLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  GC08CheckCloudSegmentationDesignLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc08_check_cloud_segmentation_design"
      Code: "../../src/lambda/gc08_check_cloud_segmentation_design/build/GC08CheckCloudSegmentationDesignLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  ## GC09
  GC09CheckNetworkSecurityArchitectureDocumentLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc09_check_netsec_architecture"
      Code: "../../src/lambda/gc09_check_netsec_architecture/build/GC09CheckNetworkSecurityArchitectureDocumentLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  GC09CheckNonPublicStorageAccountsLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc09_check_non_public_storage_accounts"
      Code: "../../src/lambda/gc09_check_non_public_storage_accounts/build/GC09CheckNonPublicStorageAccountsLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  ## GC10
  GC10CheckCyberCenterSensorsLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc10_check_cyber_center_sensors"
      Code: "../../src/lambda/gc10_check_cyber_center_sensors/build/GC10CheckCyberCenterSensorsLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  GC10CheckSignedMOULambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc10_confirmation_of_mou"
      Code: "../../src/lambda/gc10_confirmation_of_mou/build/GC10CheckSignedMOULambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"

  ## GC11
  GC11CheckSecurityContactLambda:
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}gc11_check_security_contact"
      Code: "../../src/lambda/gc11_check_security_contact/build/GC11CheckSecurityContactLambda/"
      Handler: app.lambda_handler
      Role: !Sub "arn:aws:iam::${AuditAccountID}:role/${RolePrefix}default_assessment_role"
      Runtime: !Ref PythonRuntime
      Timeout: 90
      Layers:
        - !Ref CloudGuardrailsCommonLayer
      LoggingConfig:
        LogGroup: !Sub "${OrganizationName}gc_guardrails"
        LogFormat: "JSON"
