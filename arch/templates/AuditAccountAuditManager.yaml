AWSTemplateFormatVersion: 2010-09-09
Description: Creates the AWS Audit Manager compliance framework and assessment to assess GC Guardrails.

Parameters:
  OrganizationName:
    Type: String
    Default: ""
    Description: The name of the organization. Used as a prefix in resource names.
  AuditAccountID:
    Type: String
    Default: ""
    Description: 12-digit AWS Account ID (e.g., '222222222222')
  EvidenceBucketName:
    Type: String
    Default: ""
    Description: >-
      The name of the Amazon S3 bucket to be used to store the required documents for assessment.
  AdditionalAssessmentAdminRoleARN:
    Type: String
    Default: ""
    Description: >-
      (optional) ARN of any additional roles that should be configured as owners of the Assessment in Audit Manager
  RolePrefix:
    Type: String
    Default: "ASEA-"
    Description: >-
      The prefix to apply to generated role names, in ASEA this is generally ASEA- for lza this could be cdk-accel etc
  PythonRuntime:
    Type: String
    Default: 'python3.12'
    Description:
      The python runtime to use for the compliance dashboard

Conditions:
  IsAuditAccount: !Equals
    - !Ref AWS::AccountId
    - !Ref AuditAccountID

Resources:
  #############################################
  # Part 1 - Import Custom Framework
  #############################################
  AuditManagerLambdaExecutionRolePolicy:
    Condition: IsAuditAccount
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCreateLogGroup
            Action:
              - "logs:CreateLogGroup"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
            Effect: Allow
          - Sid: AllowLogging
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${OrganizationName}gc*"
            Effect: Allow
          - Sid: AllowOrganizationsReadAccess
            Action:
              - "organizations:Describe*"
              - "organizations:List*"
            Resource: "*"
            Effect: Allow
          - Sid: AllowIAM
            Action:
              - "iam:ListRoles"
            Resource: "*"
            Effect: Allow
      PolicyName: gc_setup_amresources_lambda_execution_role_policy
      Roles:
        - !Ref AuditManagerResourcesLambdaExecutionRole

  AuditManagerResourcesLambdaExecutionRole:
    Condition: IsAuditAccount
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Description: "Audit Manager Resource Config"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess
      Path: "/"
      RoleName: !Sub ${RolePrefix}auditmanager_resources_role
      Tags:
        - Key: "Source"
          Value: "ProServe Delivery Kit"

  AssessmentOwnerRole:
    Condition: IsAuditAccount
    Type: AWS::IAM::Role
    Properties:
      Description: "GC Guardrails - Assessment Owner Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess
      Path: "/"
      RoleName: !Sub "${RolePrefix}gc_assessment_owner_role"
      Tags:
        - Key: "Source"
          Value: "ProServe Delivery Kit"

  AuditManagerResourcesLambda:
    DependsOn:
      - AuditManagerLambdaExecutionRolePolicy
    Condition: IsAuditAccount
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${OrganizationName}aws_auditmanager_resources_config_setup"
      Code: "../../src/lambda/aws_auditmanager_resources_config_setup/build/AuditManagerResourcesLambda/"
      Handler: app.lambda_handler
      Role: !GetAtt AuditManagerResourcesLambdaExecutionRole.Arn
      Runtime: !Ref PythonRuntime
      Timeout: 180

  AWSAuditManagerSetup:
    Condition: IsAuditAccount
    Type: Custom::AWSAuditManagerSetup
    Properties:
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${OrganizationName}aws_auditmanager_resources_config_setup"
      AssessmentOwnerRoleARN: !GetAtt AssessmentOwnerRole.Arn
      EvidenceBucketName: !Ref EvidenceBucketName
      LambdaExecutionRoleARN: !GetAtt AuditManagerResourcesLambdaExecutionRole.Arn
      AdditionalAssessmentAdminRoleARN: !Ref AdditionalAssessmentAdminRoleARN
      UpdateVariable: QVdTb21lCg8
    DependsOn:
      - AuditManagerResourcesLambda
