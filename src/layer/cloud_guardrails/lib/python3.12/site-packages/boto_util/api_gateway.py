import logging
import time


logger = logging.getLogger()
logger.setLevel(logging.INFO)


def list_all_api_gateway_deployments(
    api_gw_client, api_id: str, page_size: int = 25, interval_between_calls: float = 0.05
):
    """Get the list of deployments for a given API ID."""
    resources: list[dict] = []
    paginator = api_gw_client.get_paginator("get_deployments")
    page_iterator = paginator.paginate(restApiId=api_id, limit=page_size)
    for page in page_iterator:
        resources.extend(page.get("items", []))
        time.sleep(interval_between_calls)
    return resources


def list_all_api_gateway_rest_apis(api_gw_client, page_size: int = 25, interval_between_calls: float = 0.05):
    """Get the list of REST APIs."""
    resources: list[dict] = []
    paginator = api_gw_client.get_paginator("get_rest_apis")
    page_iterator = paginator.paginate(limit=page_size)
    for page in page_iterator:
        resources.extend(page.get("items", []))
        time.sleep(interval_between_calls)
    return resources


def list_all_api_gateway_resources(
    api_gw_client, rest_api_id: str, page_size: int = 25, interval_between_calls: float = 0.05
):
    """Get a list of all the resources in an API Gateway Rest API."""
    resources: list[dict] = []
    paginator = api_gw_client.get_paginator("get_resources")
    page_iterator = paginator.paginate(restApiId=rest_api_id, PaginationConfig={"PageSize": page_size})
    for page in page_iterator:
        resources.extend(page.get("items", []))
        time.sleep(interval_between_calls)
    return resources
