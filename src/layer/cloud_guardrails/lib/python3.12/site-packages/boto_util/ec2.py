import logging
import time

import botocore.exceptions

logger = logging.getLogger()
logger.setLevel(logging.INFO)


def get_enabled_regions(ec2_client) -> list[dict]:
    """Get the list of enabled regions"""
    result = []
    try:
        response = ec2_client.describe_regions(DryRun=False, AllRegions=True)
    except botocore.exceptions.ClientError as ex:
        if "UnauthorizedOperation" in ex.response["Error"]["Code"]:
            logger.error("UnauthorizedOperation when trying to describe regions (EC2)")
        logger.error("Unable to describe regions.")
        raise ex
    for region in response.get("Regions"):
        if region.get("OptInStatus") != "not-opted-in":
            result.append(region.get("RegionName"))
    return result


def describe_all_ec2_volumes(ec2_client, page_size: int = 25, interval_between_calls: float = 0.05):
    resources: list[dict] = []
    paginator = ec2_client.get_paginator("describe_volumes")
    page_iterator = paginator.paginate(PaginationConfig={"PageSize": page_size})
    for page in page_iterator:
        resources.extend(page.get("Volumes", []))
        time.sleep(interval_between_calls)
    return resources
