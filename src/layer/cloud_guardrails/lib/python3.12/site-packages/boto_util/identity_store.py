import logging
import time

import botocore.exceptions

logger = logging.getLogger()
logger.setLevel(logging.INFO)


def list_all_identity_store_groups(
    identity_store_client, instance_id: str, interval_between_calls: float = 0.05
) -> list[dict]:
    try:
        args = {"IdentityStoreId": instance_id}
        resources = []

        while True:
            response = identity_store_client.list_groups(**args)

            if response:
                resources.extend(response.get("Groups", []))
                args["NextToken"] = response.get("NextToken")
            else:
                args["NextToken"] = None

            if not args.get("NextToken"):
                break
            else:
                time.sleep(interval_between_calls)

        return resources

    except botocore.exceptions.ClientError as ex:
        if "ResourceNotFound" in ex.response["Error"]["Code"]:
            ex.response["Error"][
                "Message"
            ] = f"Failed to list groups due to error 'ResourceNotFound' for instance id '{instance_id}'."
        elif "Throttling" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list groups due to error 'Throttling'."
        elif "AccessDenied" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list groups due to error 'AccessDenied'."
        elif "InternalServer" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list groups due to error 'InternalServer'."
        elif "Validation" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list groups due to error 'Validation'."
        else:
            ex.response["Error"]["Message"] = "InternalError"
            ex.response["Error"]["Code"] = "InternalError"
        raise ex
