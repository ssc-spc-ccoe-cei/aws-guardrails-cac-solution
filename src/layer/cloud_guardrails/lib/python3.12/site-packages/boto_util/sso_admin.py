import logging
import time

import botocore.exceptions

logger = logging.getLogger()
logger.setLevel(logging.INFO)


def list_all_sso_admin_instances(sso_admin_client, interval_between_calls: float = 0.05) -> list[dict]:
    try:
        args = {}
        resources = []

        while True:
            response = sso_admin_client.list_instances(**args)

            if response:
                resources.extend(response.get("Instances", []))
                args["NextToken"] = response.get("NextToken")
            else:
                args["NextToken"] = None

            if not args.get("NextToken"):
                break
            else:
                time.sleep(interval_between_calls)

        return resources

    except botocore.exceptions.ClientError as ex:
        if "Throttling" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list instances due to service throttling."
        elif "InternalServer" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list instances due to a Service failure error."
        elif "AccessDenied" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list instances due to an access denied error."
        elif "Validation" in ex.response["Error"]["Code"]:
            ex.response["Error"]["Message"] = "Failed to list instances due to a validation error."
        else:
            ex.response["Error"]["Message"] = "InternalError"
            ex.response["Error"]["Code"] = "InternalError"
        raise ex
